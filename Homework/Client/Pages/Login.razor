@page "/Login"

@inject NavigationManager navman;
@inject AppState state;
@inject IUserService userService;

<PageTitle>Login</PageTitle>

<h3>Login</h3>
<br />
<h3>Use email: admin@gmail.com and password: 123</h3>
<br />
<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <label>Email </label>
    <InputText @onkeydown="SeeModel" @bind-Value="modeUser.Email">Email</InputText>
    <label>Pasword </label>
    <InputText type="password" @bind-Value="modeUser.Password">Password</InputText>
    <button type="submit" disabled="@(!editContext.Validate())">Submit</button>
</EditForm>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "returnUrl")]
    public string returningUrl { get; set; } = String.Empty;
    public Userr modeUser = new Userr();
    EditContext editContext;
    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(modeUser);
        await Task.Delay(100);
        Console.WriteLine("return is " + returningUrl);
    }
    void SeeModel(KeyboardEventArgs e)
    {
        if (e.Key == "e")
        {

            Console.WriteLine(modeUser.Password + " " + modeUser.Email);
        }
    }

    public async Task OnValidSubmit()
    {
        modeUser.Name = "asd";
        bool response = await userService.Login(modeUser);
        state.IsAuthenticated = response;
        if (response)
        {

            if (String.IsNullOrEmpty(returningUrl))
            {
                navman.NavigateTo("/items");
            }
            else
            {
                navman.NavigateTo(Uri.UnescapeDataString(returningUrl));
            }
        }
    }
}
