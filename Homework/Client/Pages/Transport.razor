@page "/transport"

@inject IProductService baraaservice;
@inject IWarehouseService warehouseService;
@inject JsInterop js;

<PageTitle>Transport</PageTitle>

@if (WareHouses == null)
{
    <h3>Loading ...</h3>
}
else
{
    <div @onkeydown="HandleKeyDown">
        <h3>WareHouses</h3>
        <table class="table">
            @*            <thead>
        <tr>
        <th>WareHouse Name</th>
        <th>Items</th>
        </tr>
        </thead>*@
            <tbody>
                @foreach (var wareHouse in WareHouses)
                {
                    @*                    <tr>
            <td>@wareHouse.Name Warehouse</td>
            <td></td>
            </tr>*@
                    <tr>
                        <td colspan="2">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>
                                            <div>@wareHouse.Name items</div>

                                            <div>
                                                <button @onclick="()=> OnAddButtonClick(wareHouse.Id)">Add Products</button>
                                            </div>
                                        </th>
                                        <th>Code</th>
                                        <th>Price</th>
                                        <th>Count</th>
                                        <th>Unit</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in wareHouse.Items)
                                    {
                                        <tr>
                                            <td>@item.Name</td>
                                            <td>@item.Code</td>
                                            <td>@item.Price</td>
                                            <td>@item.Count</td>
                                            <td>@item.Meas</td>
                                            <td>
                                                <button>Sell</button>
                                                <button>Transfer</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <Modal @ref="Modal" OnSaveChanges="OnModalSave">
            <Title>
                Add item to Warehouse
            </Title>
            <Body>
                <select @bind="modalSelectedItemCode" id="cars" name="cars">
                    @foreach (var item in Baraanuud)
                    {
                        <option value="@item.Code">@item.Code</option>
                    }
                </select>
                <label>Count</label>
                <input type="number" @bind-value="modalCount">
                <br>
                <label>Name</label>
                <label>@Baraanuud.FirstOrDefault(x=>x.Code == modalSelectedItemCode).Name</label>
                <br>
                <label>Price</label>
                <label>@Baraanuud.FirstOrDefault(x=>x.Code == modalSelectedItemCode).Price</label>
                <br>
                <label>Unit of measure</label>
                <label>@Baraanuud.FirstOrDefault(x=>x.Code == modalSelectedItemCode).Meas</label>
            </Body>
        </Modal>
    </div>
}



@code {
    WareHouse wareHouse = new WareHouse();
    private List<WareHouse>? WareHouses;
    private List<Product>? Baraanuud;
    Modal Modal;
    Product ModalBaraa;
    int modalSelectedItemCode = 1;
    int modalCount = 0;//Used for product count on modal

    protected override async Task OnInitializedAsync()
    {
        await warehouseService.GetWareHousesWithItemsAsync();
        await baraaservice.GetItemsAsync();
        WareHouses = warehouseService.WareHouses;
        Baraanuud = baraaservice.Items;
    }
    public void OnAddButtonClick(int warehouseId)
    {
        Modal.Open();
        ModalBaraa = new Product(Baraanuud[modalSelectedItemCode]);
        //TransactionProd prod = new TransactionProd();
        //prod.ProductName = "Chiher";
        //prod.ProductPrice = 10;
        //prod.ProductMeas = UnitMeas.KG;
        //prod.ProductCount = 10;
        //prod.ToWareHouseId = warehouseId;
        //prod.FromWareHouseId = 0;
        //prod.TransactionDate = DateTime.Now;
        //prod.ProductCode = 1;
        //await warehouseService.AddProductToWareHouse(prod);
        //await warehouseService.GetWareHousesWithItemsAsync();
        //WareHouses = warehouseService.WareHouses;
    }
    public async Task OnDeleteButtonClick(int id)
    {
        Console.WriteLine("Clicked " + id);
        await baraaservice.RemoveItem(id);
    }
    public async Task OnEditButtonClick(Product baraa)
    {
        Console.WriteLine("Edited " + baraa.Id);
        await Task.Run(() => Modal.Open());
    }
    public void HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "e")
        {
            Modal.Open();
        }
        else if (e.Key == "q")
        {
            Modal.Close();
        }
    }
    public void OnItemSelected()
    {

    }
    public async Task OnModalSave()
    {
        Modal.Close();
        //await baraaservice.EditItem(Modal.editingBaraa);
        //Modal.ResetBaraa();
    }
}

